<Window x:Class="JSON_Viewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JSON_Viewer"
        xmlns:conv="clr-namespace:JSON_Viewer.Converters"
        xmlns:json="clr-namespace:System.Text.Json;assembly=System.Text.Json"
        mc:Ignorable="d" Icon="{StaticResource Icon}"
        Title="MainWindow" Height="450" Width="800" Initialized="Window_Initialized">

    <Window.Resources>
        <ContextMenu x:Key="ItemMenu">
            <ContextMenu.Items>
                <MenuItem Header="asdasd" Click="MenuItem_Click" />
            </ContextMenu.Items>
        </ContextMenu>
    </Window.Resources>
    
    <DockPanel>
        <DockPanel.Background>
            <LinearGradientBrush StartPoint="0 0" EndPoint="2000 0">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="LightGray" />
                    <GradientStop Color="White" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </DockPanel.Background>

        <StackPanel DockPanel.Dock="Top" Height="28" Margin="3" HorizontalAlignment="Left">
            <Button Width="24" Height="24" Margin="0 2" Background="White" Click="Open_Click">
                <Image Source="{StaticResource Open}" />
            </Button>
        </StackPanel>

        <Border DockPanel.Dock="Right" Width="200" Padding="5" Background="White" BorderThickness="1" BorderBrush="Gray">
            <StackPanel Orientation="Vertical">
                <TextBlock>Search for text:</TextBlock>
                <TextBox FontSize="14" Text="{Binding SearchState.Query, UpdateSourceTrigger=PropertyChanged}" TextChanged="UpdateSearchDebounce" Margin="0 5 0 10"></TextBox>

                <CheckBox IsChecked="{Binding SearchState.SearchInNames}" Checked="UpdateSearchDebounce" Unchecked="UpdateSearchDebounce">Search in property names</CheckBox>
                <CheckBox IsChecked="{Binding SearchState.SearchInValues}" Checked="UpdateSearchDebounce" Unchecked="UpdateSearchDebounce">Search in values</CheckBox>
                <CheckBox IsChecked="{Binding SearchState.RegexQuery}" Checked="UpdateSearchDebounce" Unchecked="UpdateSearchDebounce">Enable regex</CheckBox>

                <StackPanel Orientation="Vertical" Visibility="{Binding SearchState.FoundPaths, Converter={local:NotNullToVisibilityConverter}}">
                    <TextBlock Visibility="{Binding SearchState.AnyMatches, Converter={local:BoolToVisibilityConverter}}">
                        Match
                        <Run Text="{Binding SearchState.CurrentMatchIndexPlusOne, Mode=OneWay}" />
                        /
                        <Run Text="{Binding SearchState.FoundPaths.Length, Mode=OneWay}" />
                    </TextBlock>
                    <TextBlock Visibility="{Binding SearchState.AnyMatches, Converter={local:BoolToVisibilityConverter}, ConverterParameter=negate}">
                        No matches found
                    </TextBlock>

                    <Button Margin="0 5 0 3" Click="PreviousMatch_Click" IsEnabled="{Binding SearchState.CanGoToPreviousMatch}">Previous</Button>
                    <Button Click="NextMatch_Click" IsEnabled="{Binding SearchState.CanGoToNextMatch}">Next</Button>
                </StackPanel>
            </StackPanel>
        </Border>

        <TreeView Name="Tree" ItemsSource="{Binding Items}" DockPanel.Dock="Top" BorderBrush="Transparent" Padding="0 5 0 0"
                  VirtualizingPanel.IsVirtualizing="True">
            <TreeView.CommandBindings>
                <CommandBinding Command="ApplicationCommands.Copy" Executed="CommandBinding_Executed" />
            </TreeView.CommandBindings>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="local:TreeViewItemHelper.BringSelectedItemIntoView" Value="True" />
                </Style>
            </TreeView.ItemContainerStyle>
            
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=., Converter={conv:JsonElementToChildrenConverter}}">
                    <TextBlock Text="{Binding Path=., Converter={conv:JsonElementToStringConverter}, ConverterParameter={RelativeSource Mode=PreviousData}}"></TextBlock>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </DockPanel>
</Window>
